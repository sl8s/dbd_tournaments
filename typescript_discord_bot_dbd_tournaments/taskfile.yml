version: "3"

env:
  app_directory: ./app

tasks:
  npm:download:
    dir: "{{.app_directory}}"
    cmds:
      - npm run download
  npm:build:
    dir: "{{.app_directory}}"
    cmds:
      - npm run build
  npm:test:
    dir: "{{.app_directory}}"
    cmds:
      - npm run test
  npm:deploy_commands:
    dir: "{{.app_directory}}"
    cmds:
      - npm run build
      - npm run deploy_commands
  docker:postgres:restore_backup:
    cmds:
      - docker-compose down
      - docker-compose up -d postgres
      - docker-compose exec -T postgres sh -c 'zcat /backups/{{.TIMESTAMP}}.sql.gz | psql -U "$POSTGRES_USER" -d "$POSTGRES_DB"'
      - docker-compose down
    requires:
      vars: [TIMESTAMP]
  docker:postgres_and_adminer:run:
    cmds:
      - docker-compose down
      - docker-compose up -d postgres
      - docker-compose up -d adminer
  docker:run:
    cmds:
      - docker-compose down
      - docker-compose up --build
  docker:stop:
    cmds:
      - docker-compose down